const fs = require('fs'); const path = require('path'); const { readEnv } = require('../lib/database'); const { cmd, commands } = require('../command'); const { fetchJson } = require('../lib/functions'); const sensitiveData = require('../dila_md_licence/a/b/c/d/dddamsbs'); let listenerRegistered = false; const sendWelcomeMessage = async (conn, from, memberIds) => { try { const groupMetadata = await conn.groupMetadata(from); const groupName = groupMetadata.subject; const groupDesc = groupMetadata.desc || "No description available."; const config = await readEnv(); if (!config.WELCOME_SET) { throw new Error("WELCOME_SET is not defined in the environment variables."); } let readmore = "\u200B".repeat(4000); let readmoreText = `\n${config.WELCOME_SET}\n\n*Name :*\n${groupName}\n\n*Description :*\n${groupDesc}\n\nᴍᴀᴅᴇ ʙʏ ᴍʀ ᴅɪʟᴀ ᴏꜟᴄ`; const welcomeMentions = memberIds.map(id => `@${id.split('@')[0]}`).join('\n'); let replyText = `*Hey 🫂♥️*\n${welcomeMentions}\n*Welcome to Group ⤵️*\n${readmore}${readmoreText}`; await conn.sendMessage(from, { image: { url: 'https://i.imgur.com/w5CeRcI.jpeg' }, caption: replyText, mentions: memberIds, document: { url: 'https://drive.google.com/uc?export=download&id=1Clg-8I73ynkpkrt4mmac_UssG8ZQNxy8' } }); await sendGroupRulesAlert(conn, memberIds, groupName, groupDesc); } catch (error) { console.error("Error sending welcome message:", error); } }; const sendGroupRulesAlert = async (conn, memberIds, groupName, groupDesc) => { try { const config = await readEnv(); if (config.WELCOME_ALERT === undefined) { throw new Error("WELCOME_ALERT is not defined in the environment variables."); } if (config.WELCOME_ALERT === 'true') { const alertMessage = `*Hey Dear 🫂❤️*\n\n*Welcome to ${groupName}*\n\n${groupDesc}\n\n*Be sure to read the group description*\n\nᴍᴀᴅᴇ ʙʏ ᴍʀ ᴅɪʟᴀ ᴏꜟᴄ`; for (const memberId of memberIds) { try { if (!memberId) continue; await conn.sendMessage(memberId, { image: { url: 'https://i.imgur.com/w5CeRcI.jpeg' }, caption: alertMessage, document: { url: 'https://drive.google.com/uc?export=download&id=1Clg-8I73ynkpkrt4mmac_UssG8ZQNxy8' } }); } catch (error) { console.error(`Error sending message to ${memberId}:`, error); } } } } catch (error) { console.error("Error sending group rules alert:", error); } }; const registerGroupWelcomeListener = (conn) => { if (!listenerRegistered) { conn.ev.on('group-participants.update', async (update) => { const { id, participants, action } = update; if (action === 'add' && participants.length > 0) { console.log("New participants:", participants); await sendWelcomeMessage(conn, id, participants); } }); listenerRegistered = true; } }; cmd({ on: "body" }, async (conn, mek, m, { from, body, isOwner }) => { try { const config = await readEnv(); if (config.WELCOME === undefined) { throw new Error("WELCOME is not defined in the environment variables."); } if (config.WELCOME === 'true') { if (isOwner) return; registerGroupWelcomeListener(conn); } } catch (e) { console.log(e); await m.reply(`Error: ${e.message}`); } });
